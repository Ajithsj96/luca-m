{"name":"Emotime","tagline":"Recognizing emotional states in faces","body":"Emotime\r\n=======\r\n\r\n_Recognizing emotional states in faces_\r\n\r\n----------------------------------------------\r\n\r\nAuthors: Luca Mella, Daniele Bellavista\r\n\r\nDevelopment Status: Experimental \r\n\r\nCopyleft: [CC-BY-NC 2013](http://creativecommons.org/licenses/by-nc/3.0/)\r\n\r\n----------------------------------------------\r\n\r\n## Goal\r\nThis project aims to recognize main facial expressions (neutral, anger, disgust, fear, joy, sadness, surprise) in image\r\nsequences using the approaches described in:\r\n\r\n* [Dynamics of Facial Expression Extracted Automatically from Video](http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=1384873)\r\n* [Fully Automatic Facial Action Recognition in Spontaneous Behavior](http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=1613024)\r\n\r\n## References\r\n\r\nHere is listed some interesting material about machine learning, opencv, gabor transforms and other\r\nstuff that could be useful to get in this topic:\r\n\r\n * [AdaBoost and the Super Bowl of Classifiers](http://www.inf.fu-berlin.de/inst/ag-ki/rojas_home/documents/tutorials/adaboost4.pdf)\r\n * [Tutorial on Gabor Filters](http://mplab.ucsd.edu/tutorials/gabor.pdf)\r\n * [Gabor wavelet transform and its application](http://disp.ee.ntu.edu.tw/~pujols/Gabor%20wavelet%20transform%20and%20its%20application.pdf)\r\n * [Gabor Filter Visualization](http://www.cs.umd.edu/class/spring2005/cmsc838s/assignment-projects/gabor-filter-visualization/report.pdf)\r\n * [Meta-Analyis of the First Facial Expression Recognition Challenge](http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6222016)\r\n\r\n## Project Structure\r\n\r\n    src\r\n      \\-->dataset \t\t Scripts for dataset management\r\n      \\-->facecrop \t\t Utilities and modules for face cropping and registration\r\n      \\-->gaborbank\t\t Utilities and modules for generating gabor filters and image filtering\r\n      \\-->adaboost \t\t Utilities and modules for adaboost train, prediction, and feature selection\r\n      \\-->svm          Utilities and modules for svm training and prediction\r\n      \\-->detector     Multiclass detector and preprocessor\r\n      \\-->utils        String and IO utilities, CSV supports, and so on..\r\n    doc                Documentation (doxigen)\r\n    report             Class project report (latex)\r\n    resources          Containing third party resources (eg. OpenCV haar classifiers)\r\n    assets             Binary folder\r\n    test               Some testing scripts here\r\n\r\n## Build\r\n\r\nDependencies:\r\n\r\n* `CMake >= 2.8`\r\n* `Python >= 2.7, < 3.0`\r\n* `OpenCV >= 2.4.5`\r\n\r\nCompiling on linux:\r\n\r\n* `mkdir build` \r\n* `cd build`\r\n* `cmake .. ; make ; make install` - now the `asset` folder should be populated\r\n\r\nCross-compiling for windows:\r\n\r\n* Using CMake or CMakeGUI, select emotime as source folder and configure.\r\n* If it complains about setting the variable `OpenCV_DIR` set it to the appropriate path so that:\r\n  - C:/path/to/opencv/dir/ contains the libraries (`*.lib`)\r\n  - C:/path/to/opencv/dir/include contains the include directories (opencv and opencv2)\r\n  - **IF the include directory is missing** the project will likely not be able\r\n    to compile due to missing reference to `opencv2/opencv` or similar.\r\n* Then generate the project and compile it.\r\n* This was tested with Visual Studio 12 64 bit.\r\n\r\n## Detection and Prediction\r\n\r\nProof of concept model trained using faces extracted using the detector `cbcl1` are available for download, mulclass strategy [1 vs all](https://dl.dropboxusercontent.com/u/7618747/dataset_svm_354_cbcl1_1vsall.zip) and [many vs many](https://dl.dropboxusercontent.com/u/7618747/dataset_svm_354_cbcl1_1vsallext.zip) can be found.\r\n\r\n_NOTE: remember that this is a prototype_\r\n\r\n### Usage\r\n\r\nVideo gui:\r\n\r\n    echo \"VIDEOPATH\" | ./emotimevideo_cli FACEDETECTORXML (EYEDETECTORXML|none) WIDTH HEIGHT NWIDTHS NLAMBDAS NTHETAS (svm|ada) (TRAINEDCLASSIFIERSXML)+\r\n\r\nCam gui:\r\n\r\n    ./emotimegui_cli FACEDETECTORXML (EYEDETECTORXML|none) WIDTH HEIGHT NWIDTHS NLAMBDAS NTHETAS (svm|ada) (TRAINEDCLASSIFIERSXML)+\r\n\r\nOr:\r\n\r\n    ./gui.py --cfg <dataset_configuration_path> --mode svm --eye-correction <dataset_path>\r\n\r\n\r\n## Training\r\n\r\n### Dataset\r\n\r\nThe [Cohn-Kanade database](http://www.consortium.ri.cmu.edu/ckagree/) is one of the most used faces database. Its extended version (CK+) contains also [FACS](http://en.wikipedia.org/wiki/Facial_Action_Coding_System)\r\ncode labels (aka Action Units) and emotion labels (neutral, anger, contempt, disgust, fear, happy, sadness, surprise).\r\n\r\n### Usage\r\n\r\nInitialize and fill a dataset:\r\n\r\n    python2 datasetInit.py [-h] --cfg <dataset_configuration_path> <dataset_path>\r\n    python2 datasetFillCK.py [-h] --cfg <dataset_configuration_path> <dataset_path> <cohnKanade_folder> <cohnKanade_emotions_folder>\r\n\r\nTrain some models:\r\n\r\n    ./train_models.sh svm 1vsallext ./dataset\r\n\r\nOr better:\r\n\r\n    ./train_models.py --cfg <dataset_configuration_path> --mode svm --prep-train-mode 1vsAll --eye-correction <dataset_folder>\r\n\r\nOr also:\r\n\r\n    python datasetCropFaces.py [-h] [--eye-correction] dsFolder\r\n    python datasetFeatures.py [-h] dsFolder \r\n    python datasetPrepTrain.py [-h] [--mode {1vs1,1vsAll,1vsAllExt}] dsFolder\r\n    python datasetTrain.py [-h] [--mode {adaboost,svm}] dsFolder \r\n    python datasetVerifyPrediction.py [-h] [--mode {adaboost,svm}] [--eye-correction] dsFolder\r\n\r\n\r\n## Further Development\r\n\r\n* Validation dataset\r\n* Finest parameter tuning\r\n* Extend training dataset\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}